{"version":3,"file":"static/js/241.0cc2d38a.chunk.js","mappings":"yNAEaA,EAAgBC,EAAAA,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qGAO9BC,EAAqBH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yP,4GCP9BG,EAAoBL,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qMAW7BI,EAAMN,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2JAUhBK,EAAkBP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,qGAQ5BO,EAAQT,EAAAA,GAAAA,EAAQU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,wEAMhBS,EAAoBX,EAAAA,GAAAA,IAAUY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,yE,gDC7B9BW,EAAe,SAAHC,GAA4B,IAAtBC,EAAID,EAAJC,KAAMC,EAAQF,EAARE,SAC3BC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAErBC,EAA0CP,EAA1CO,IAAKC,EAAqCR,EAArCQ,SAAUC,EAA2BT,EAA3BS,YAAaC,EAAcV,EAAdU,MAAOC,EAAOX,EAAPW,GAC3CC,GAA4BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,IAExBI,EAAAA,EAAAA,YAAU,WACM,OAARd,QAAQ,IAARA,GAAAA,EAAUe,MAAK,SAAAC,GAAI,OAAIA,EAAKT,KAAOA,CAAE,IACrCM,GAAU,GACLA,GAAU,EACvB,GAAG,CAACb,EAAUO,IAQd,OACIU,EAAAA,EAAAA,MAAC/B,EAAiB,CAAAW,SAAA,EACdqB,EAAAA,EAAAA,KAAC/B,EAAG,CAACgC,IAAKhB,GAEN,kEACAiB,IAAKhB,KACTa,EAAAA,EAAAA,MAAC7B,EAAe,CAAAS,SAAA,EACZqB,EAAAA,EAAAA,KAAA,MAAArB,SAAKO,KACLc,EAAAA,EAAAA,KAAA,KAAArB,SAAIQ,QAERY,EAAAA,EAAAA,MAACzB,EAAiB,CAAAK,SAAA,EACdoB,EAAAA,EAAAA,MAAC3B,EAAK,CAAAO,SAAA,CAAES,EAAM,aACbT,MAELqB,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CAACC,QApBI,WAChB,IAAMC,EAAaC,OAAOC,OAAO,CAAEC,SAAU,GAAK9B,GACzCE,EAATc,GAAkBe,EAAAA,EAAAA,IAAmBpB,IAAgBqB,EAAAA,EAAAA,IAAgBL,IACrEV,GAAWD,EACf,EAgBqCf,SAAEe,EAAS,mBAAqB,kBAGzE,C,+JC1CaiB,EAAgBhD,EAAAA,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qGAO9B+C,EAAqBjD,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2EAM9BgD,EAAelD,EAAAA,GAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,oDAKxBsC,EAASxC,EAAAA,GAAAA,OAAaU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,0Z,qLClBtBiD,EAAenD,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4CAKzBkD,EAAWpD,EAAAA,GAAAA,KAAWI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yMAYtBmD,EAAYrD,EAAAA,GAAAA,MAAYQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,oFAOvBoD,EAAYtD,EAAAA,GAAAA,MAAYU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,8fAGzB,SAAAqD,GAAK,OAAIA,EAAMC,UAAY,mBAAmB,IACxC,SAAAD,GAAK,OAAIA,EAAME,SAAW,MAAM,I,SC3BtCC,EAAO,SAAH5C,GAA8B,IAAxB6C,EAAU7C,EAAV6C,WAAYC,EAAI9C,EAAJ8C,KAC/BjC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BkC,EAAIhC,EAAA,GAAEiC,EAAOjC,EAAA,GACpBkC,GAA0BnC,EAAAA,EAAAA,UAAS,IAAGoC,GAAAlC,EAAAA,EAAAA,GAAAiC,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAsBvC,EAAAA,EAAAA,UAAS,IAAGwC,GAAAtC,EAAAA,EAAAA,GAAAqC,EAAA,GAA3BE,EAAGD,EAAA,GAAEE,EAAMF,EAAA,GAClBG,GAA8B3C,EAAAA,EAAAA,UAAS,IAAG4C,GAAA1C,EAAAA,EAAAA,GAAAyC,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,IAE1BvC,EAAAA,EAAAA,YAAU,WACF2B,GAGJe,GACJ,GAAG,CAACf,IAEJ,IAAMgB,EAAe,SAACC,GAClB,IAAQC,EAAUD,EAAEE,OAAZD,MACR,OAAQD,EAAEE,OAAOlB,MACb,IAAK,OACDC,EAAQgB,GACR,MACJ,IAAK,QACDZ,EAASY,GACT,MACJ,IAAK,MACDR,EAAOQ,GACP,MACJ,IAAK,UACDJ,EAAWI,GAKnBnB,EAAW,CAAEE,KAAAA,EAAMI,MAAAA,EAAOI,IAAAA,EAAKI,QAAAA,GACnC,EAEME,EAAY,WACdb,EAAQ,IACRI,EAAS,IACTI,EAAO,IACPI,EAAW,GACf,EAEA,OACItC,EAAAA,EAAAA,MAACgB,EAAQ,CAAApC,SAAA,EACLoB,EAAAA,EAAAA,MAACiB,EAAS,CAAArC,SAAA,CAAC,QACPqB,EAAAA,EAAAA,KAACiB,EAAS,CACN0B,KAAK,OACLnB,KAAK,OACLoB,YAAY,OACZC,UAAQ,EACRJ,MAAOjB,EACPsB,SAAUP,QAGlBxC,EAAAA,EAAAA,MAACiB,EAAS,CAAArC,SAAA,CAAC,SACPqB,EAAAA,EAAAA,KAACiB,EAAS,CACN0B,KAAK,QACLnB,KAAK,QACLoB,YAAY,QACZC,UAAQ,EACRJ,MAAOb,EACPkB,SAAUP,QAGlBxC,EAAAA,EAAAA,MAACiB,EAAS,CAAArC,SAAA,CAAC,SACPqB,EAAAA,EAAAA,KAACiB,EAAS,CACN0B,KAAK,MACLnB,KAAK,MACLoB,YAAY,eACZC,UAAQ,EACRJ,MAAOT,EACPc,SAAUP,QAGlBxC,EAAAA,EAAAA,MAACiB,EAAS,CAAArC,SAAA,CAAC,WACPqB,EAAAA,EAAAA,KAACiB,EAAS,CACN0B,KAAK,UACLnB,KAAK,UACLoB,YAAY,UACZC,UAAQ,EACRJ,MAAOL,EACPU,SAAUP,SAK9B,E,SCtFaQ,EAAgBpF,EAAAA,GAAAA,MAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+ECE5BmF,EAAU,SAAHvE,GAAkB,IAAZC,EAAID,EAAJC,KAChBE,GAAWC,EAAAA,EAAAA,MAMjB,OACImB,EAAAA,EAAAA,KAAC+C,EAAa,CACVJ,KAAK,SACLF,MAAO/D,EAAK8B,SACZsC,SARiB,SAACN,GACtB5D,GAASqE,EAAAA,EAAAA,IAAmB,CAAEzC,SAAU0C,SAASV,EAAEE,OAAOD,OAAQpD,GAAIX,EAAKW,KAC/E,EAOQ8D,IAAI,IACJC,KAAK,KAGjB,E,8BC0DA,EA/Da,WACT,IAAMxE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAC7BM,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BiC,EAAI/B,EAAA,GAAE6D,EAAO7D,EAAA,GAEd8D,EAAqB,OAARxE,QAAQ,IAARA,OAAQ,EAARA,EAAUyE,QACzB,SAACC,EAAaC,GAAY,OAAKD,EAAeC,EAAarE,MAAQqE,EAAajD,QAAS,GACzF,GAqBEkD,EAAa,WACf9E,GAAS+E,EAAAA,EAAAA,OACTN,EAAQ,KACZ,EAEA,OACIrD,EAAAA,EAAAA,KAAC4D,EAAAA,GAAO,CAAAjF,UACJqB,EAAAA,EAAAA,KAAC6D,EAAAA,GAAS,CAAAlF,UACNoB,EAAAA,EAAAA,MAACe,EAAY,CAAAnC,SAAA,EACTqB,EAAAA,EAAAA,KAACqB,EAAI,CAACC,WA5BH,SAACC,GAChB8B,EAAQ9B,EACZ,EA0B8CA,KAAMA,KAC1B,OAARzC,QAAQ,IAARA,OAAQ,EAARA,EAAUgF,QAAS,GACjB/D,EAAAA,EAAAA,MAACgE,EAAAA,GAAa,CAAApF,SAAA,EACVqB,EAAAA,EAAAA,KAAClC,EAAAA,EAAkB,CAAAa,SACN,OAARG,QAAQ,IAARA,OAAQ,EAARA,EAAUkF,KAAI,SAAA9E,GAAQ,OACnBc,EAAAA,EAAAA,KAACxB,EAAAA,EAAY,CAAmBE,KAAMQ,EAASP,UAC3CqB,EAAAA,EAAAA,KAACgD,EAAO,CAACtE,KAAMQ,KADAA,EAASG,GAEb,OAGvBU,EAAAA,EAAAA,MAAA,MAAApB,SAAA,CAAI,gBAAc2E,EAAW,cAC7BtD,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CAACwC,KAAK,SAASvC,QAnCxB,WAClB,IAAQoB,EAA8BD,EAA9BC,KAAMI,EAAwBL,EAAxBK,MAAOI,EAAiBT,EAAjBS,IAAKI,EAAYb,EAAZa,QAC1B,GAAa,KAATZ,GAAyB,KAAVI,GAAwB,KAARI,GAA0B,KAAZI,EAAjD,CAIA,IAAM6B,EAAW,CACbnF,SAAAA,EACAyC,KAAAA,EACA2C,WAAY,IAAIC,OAEpBC,EAAAA,EAAAA,IAAUH,GACVP,GAPA,MAFIW,EAAAA,OAAAA,QAAe,yCAA0CC,EAAAA,GAUjE,EAsBqE3F,SAAC,eAElDqB,EAAAA,EAAAA,KAAClC,EAAAA,EAAkB,CAAAa,UACfqB,EAAAA,EAAAA,KAACuE,EAAAA,GAAS,CAAA5F,UACNoB,EAAAA,EAAAA,MAAA,KAAApB,SAAA,CAAG,+BAC4BqB,EAAAA,EAAAA,KAACwE,EAAAA,GAAI,CAACC,GAAG,IAAG9F,SAAC,eAAiB,sBAQ7F,C,gIC1EO,IAAM+F,EAAqB,SAAAC,GAAK,OAAIA,EAAMC,UAAUC,YAAa,EAO3D7F,EAAe,SAAA2F,GAAK,OAAIA,EAAMG,aAAaC,MAAO,EAIlDC,EAAa,SAAAL,GAAK,OAAIA,EAAMM,OAAOC,IAAK,EACxCC,EAA6B,SAAAR,GAAK,OAAIA,EAAMM,OAAOG,oBAAqB,C","sources":["MedicineList/MedicineList.styled.js","components/MedicineItem/MedicineItem.styled.js","components/MedicineItem/MedicineItem.jsx","components/PharmacyList/PharmacyList.styled.js","components/Form/Form.styled.js","components/Form/Form.jsx","components/Counter/Counter.styled.js","components/Counter/Counter.jsx","pages/Cart.jsx","redux/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MedicineBlock = styled.section`\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    align-items: center;\n`;\n\nexport const MedicineListStyled = styled.ul`\n    display: flex;\n    align-items: start;\n    gap: 24px;\n    padding: 12px;\n    flex-wrap: wrap;\n    height: 372px;\n    width: 100%;\n    overflow-y: auto;\n    border: 1px solid var(--color-button-hover);\n    border-radius: 14px;\n`;\n","import styled from 'styled-components';\n\nexport const MedicineItemStyle = styled.li`\n  display: flex;\n  width: 200px;\n  padding: 12px;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n  border-radius: 14px;\nborder: 1px solid var(--color-button-hover)\n`;\n\nexport const Img = styled.img`\n  position: relative;\n  display: block;\n  overflow: hidden;  \n  width: 100%;\n  height: 150px;\n  object-fit: cover;\n  border-radius: 14px;\n`;\n\nexport const DescriptionWrap = styled.div`\n  display: flex;\n  width: 100%;\n  height: 66px;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Price = styled.p`\nfont-weight: 700;\nfont-size: 14px;\nalign-self: flex-start;\n`;\n\nexport const PriceQuantityWrap = styled.div`\ndisplay: flex;\njustify-content: space-between;\nwidth: 100%;\n`;\n","import { Button } from \"components/PharmacyList/PharmacyList.styled\";\nimport { DescriptionWrap, Img, MedicineItemStyle, Price, PriceQuantityWrap } from \"./MedicineItem.styled\";\nimport { addShoppingCart, deleteShoppingCart } from \"../../redux/shoppingCart/shoppingCartSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { selectBasket } from \"../../redux/selectors\";\n\n\nexport const MedicineItem = ({ drug, children }) => {\n    const dispatch = useDispatch();\n    const inBasket = useSelector(selectBasket);\n\n    const { img, medicine, description, price, id } = drug;\n    const [inCart, setInCart] = useState(false);\n\n    useEffect(() => {\n        if (inBasket?.some(item => item.id === id)) {\n            setInCart(true);\n        } else { setInCart(false) }\n    }, [inBasket, id]);\n\n    const onClickCard = () => {\n        const newDrugObj = Object.assign({ quantity: 1 }, drug);\n        inCart ? dispatch(deleteShoppingCart(id)) : dispatch(addShoppingCart(newDrugObj))\n        setInCart(!inCart);\n    };\n\n    return (\n        <MedicineItemStyle>\n            <Img src={img ?\n                img :\n                'https://www.braasco.com//ASSETS/IMAGES/ITEMS/ZOOM/no_image.jpeg'}\n                alt={medicine} />\n            <DescriptionWrap>\n                <h3>{medicine}</h3>\n                <p>{description}</p>\n            </DescriptionWrap>\n            <PriceQuantityWrap>\n                <Price>{price} â‚¬</Price>\n                {children}\n            </PriceQuantityWrap>\n            <Button onClick={onClickCard}>{inCart ? 'Delete from Cart' : 'Add to Cart'}</Button>\n        </MedicineItemStyle>\n    )\n};","import styled from 'styled-components';\n\nexport const PharmacyBlock = styled.section`\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    align-items: center;\n`;\n\nexport const PharmacyListStyled = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n`;\n\nexport const PharmacyItem = styled.li`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  width: 150px;\n  height: 48px;\n  padding: 14px;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n  border: none;\n  border-radius: 12px;\n  background: var(--color-button);\n  color: var(--color-text-button-and-back);\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.4;\n\n  &:hover,\n  &:focus {\n    background: var(--color-button-hover);\n  }\n`;\n","import styled from 'styled-components';\n\nexport const FormCartWrap = styled.div`\n  display: flex;\n  gap: 20px;\n  `;\n\nexport const UserForm = styled.form`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\ngap: 20px;\n  border: 1px solid var(--color-button-hover);\npadding: 12px;\n    border-radius: 14px;\n  height: 372px;\n\n  `;\n\nexport const LabelForm = styled.label`\ndisplay: flex;\nflex-direction: column;\ngap: 8px;\nalign-items: start;\n `;\n\n export const InputForm = styled.input`\n  width: 250px;\n  height: 40px;\n  padding: ${props => props.$padding || '8px 14px 8px 14px'};\n  border-radius: ${props => props.$radius || '14px'};\n  border: none;\n  background-color: var(--color-filter-field);\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.11;\n\n  &:invalid {\n    border: 1px solid red;\n  }\n\n  &:invalid + span::after {\n    position: absolute;\n    bottom: -20px;\n    left: 0;\n    content: \"Only 5 digits. Min - 1 km\";\n    color: red;\n    white-space: nowrap;\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 1.29;\n}\n`;\n","import { useEffect, useState } from \"react\";\nimport { UserForm, LabelForm, InputForm } from \"./Form.styled\"\n\nexport const Form = ({ returnUser, user }) => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [tel, setTel] = useState('');\n    const [address, setAddress] = useState('');\n\n    useEffect(() => {\n        if (user) {\n            return;\n        }\n        resetUser()\n    }, [user]);\n\n    const onChangeForm = (e) => {\n        const { value } = e.target;\n        switch (e.target.name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'email':\n                setEmail(value);\n                break;\n            case 'tel':\n                setTel(value);\n                break;\n            case 'address':\n                setAddress(value);\n                break;\n            default:\n                break;\n        }\n        returnUser({ name, email, tel, address })\n    };\n\n    const resetUser = () => {\n        setName('');\n        setEmail('');\n        setTel('');\n        setAddress('');\n    };\n\n    return (\n        <UserForm>\n            <LabelForm>Name\n                <InputForm\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder='Name'\n                    required\n                    value={name}\n                    onChange={onChangeForm}\n                />\n            </LabelForm>\n            <LabelForm>Email\n                <InputForm\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder='Email'\n                    required\n                    value={email}\n                    onChange={onChangeForm}\n                />\n            </LabelForm>\n            <LabelForm>Phone\n                <InputForm\n                    type=\"tel\"\n                    name=\"tel\"\n                    placeholder='Phone number'\n                    required\n                    value={tel}\n                    onChange={onChangeForm}\n                />\n            </LabelForm>\n            <LabelForm>Address\n                <InputForm\n                    type=\"address\"\n                    name=\"address\"\n                    placeholder='Address'\n                    required\n                    value={address}\n                    onChange={onChangeForm}\n                />\n            </LabelForm>\n        </UserForm>\n    )\n};","import styled from \"styled-components\";\n\nexport const InputQuantity = styled.input`\n    border-radius: 14px;\n    text-align: center;\n    width: 70px;\n`;","import { useDispatch } from 'react-redux';\nimport { updateShoppingCart } from '../../redux/shoppingCart/shoppingCartSlice';\nimport { InputQuantity } from './Counter.styled';\n\nexport const Counter = ({ drug }) => {\n    const dispatch = useDispatch();\n\n    const onChangeQuantity = (e) => {\n        dispatch(updateShoppingCart({ quantity: parseInt(e.target.value), id: drug.id }))\n    };\n\n    return (\n        <InputQuantity\n            type=\"number\"\n            value={drug.quantity}\n            onChange={onChangeQuantity}\n            min=\"1\"\n            step=\"1\"\n        />\n    )\n};","import { CartPriceWrap, Container, EmptyPage, Section } from \"./Page.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectBasket } from \"../redux/selectors\";\nimport { Link } from 'react-router-dom';\nimport { MedicineListStyled } from \"MedicineList/MedicineList.styled\";\nimport { MedicineItem } from \"components/MedicineItem/MedicineItem\";\nimport { Form } from \"components/Form/Form\";\nimport { FormCartWrap } from \"components/Form/Form.styled\";\nimport { Counter } from \"components/Counter/Counter\";\nimport { Button } from \"components/PharmacyList/PharmacyList.styled\";\nimport { useState } from \"react\";\nimport { options, postOrder } from \"../redux/shoppingCart/orderThank\";\nimport { resetShoppingCart } from \"../redux/shoppingCart/shoppingCartSlice\";\nimport { Notify } from \"notiflix\";\n\nconst Cart = () => {\n    const dispatch = useDispatch();\n    const inBasket = useSelector(selectBasket);\n    const [user, setUser] = useState(null);\n\n    const totalPrice = inBasket?.reduce(\n        (accumulator, currentValue) => accumulator + (currentValue.price * currentValue.quantity),\n        0,);\n\n    const returnUser = (user) => {\n        setUser(user)\n    }\n    \n    const onClickSubmit = () => {\n        const { name, email, tel, address } = user;\n        if (name === '' || email === '' || tel === '' || address === '') {\n            Notify.failure(`Please, fill in all fields of the form`, options);\n            return;\n        }\n        const newOrder = {\n            inBasket,\n            user,\n            createDate: new Date()\n        };\n        postOrder(newOrder)\n        resetOrder();\n    }\n\n    const resetOrder = () => {\n        dispatch(resetShoppingCart());\n        setUser(null);\n    };\n\n    return (\n        <Section>\n            <Container>\n                <FormCartWrap>\n                    <Form returnUser={returnUser} user={user} />\n                    {(inBasket?.length > 0) ?\n                        <CartPriceWrap>\n                            <MedicineListStyled>\n                                {inBasket?.map(medicine =>\n                                    <MedicineItem key={medicine.id} drug={medicine} >\n                                        <Counter drug={medicine} />\n                                    </MedicineItem>\n                                )}\n                            </MedicineListStyled>\n                            <h2>Total price: {totalPrice} â‚¬</h2>\n                            <Button type=\"submit\" onClick={onClickSubmit}>Submit</Button>\n                        </CartPriceWrap> :\n                        <MedicineListStyled>\n                            <EmptyPage>\n                                <p>\n                                    Please, select medicine on <Link to=\"/\">Pharmacies</Link> page!\n                                </p>\n                            </EmptyPage>\n                        </MedicineListStyled>}\n                </FormCartWrap>\n            </Container>\n        </Section>\n    )\n};\n\nexport default Cart;","// ------------------ medicines ---------------\n\nexport const selectAllMedicines = state => state.medicines.allMedicines;\nexport const selectMedicinesByShop = state => state.medicines.medicinesByShop;\nexport const selectIsLoading = state => state.medicines.isLoading;\nexport const selectError = state => state.medicines.error;\n\n// --------------- shoppingCart -----------------\n\nexport const selectBasket = state => state.shoppingCart.basket;\n\n// --------------- filter -----------------\n\nexport const selectSort = state => state.filter.sort;\nexport const selectFilterMedicineByShop = state => state.filter.filterMedicineByShop;"],"names":["MedicineBlock","styled","_templateObject","_taggedTemplateLiteral","MedicineListStyled","_templateObject2","MedicineItemStyle","Img","DescriptionWrap","_templateObject3","Price","_templateObject4","PriceQuantityWrap","_templateObject5","MedicineItem","_ref","drug","children","dispatch","useDispatch","inBasket","useSelector","selectBasket","img","medicine","description","price","id","_useState","useState","_useState2","_slicedToArray","inCart","setInCart","useEffect","some","item","_jsxs","_jsx","src","alt","Button","onClick","newDrugObj","Object","assign","quantity","deleteShoppingCart","addShoppingCart","PharmacyBlock","PharmacyListStyled","PharmacyItem","FormCartWrap","UserForm","LabelForm","InputForm","props","$padding","$radius","Form","returnUser","user","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","tel","setTel","_useState7","_useState8","address","setAddress","resetUser","onChangeForm","e","value","target","type","placeholder","required","onChange","InputQuantity","Counter","updateShoppingCart","parseInt","min","step","setUser","totalPrice","reduce","accumulator","currentValue","resetOrder","resetShoppingCart","Section","Container","length","CartPriceWrap","map","newOrder","createDate","Date","postOrder","Notify","options","EmptyPage","Link","to","selectAllMedicines","state","medicines","allMedicines","shoppingCart","basket","selectSort","filter","sort","selectFilterMedicineByShop","filterMedicineByShop"],"sourceRoot":""}